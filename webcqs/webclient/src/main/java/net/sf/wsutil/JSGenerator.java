package net.sf.wsutil;

import java.io.IOException;
import java.io.OutputStream;

import javax.xml.xpath.XPathExpressionException;


/**
 *	This class generate common code in javascript. 
 *
 *	@version	0.1
 *
 */
public class JSGenerator {
	
	// output destination of generated code.
	private OutputStream out;
	
	// save code in memory,at last save into destination stream.
	private StringBuilder codes = new StringBuilder();
	
	// request/response protocol
	private String protocol;
	
	private String newLine = System.getProperty("line.separator","\r\n");
	private WSDL wsdl = null;
	private Operation[] ops = null;
	
	// invoke type in js, default is asynchronous
	private boolean asynch = true;
	
	
	
	// constants of request/response protocol 
	public final static String PROTOCOL_SOAP = "soap";
	public final static String PROTOCOL_HTTPPOST = "httppost";
	public final static String PROTOCOL_HTTPGET = "httpget";
	
	
	/**
	 * 
	 * @param out	destination of generate javascript code.
	 * @param wsdl	wsdl object contains information used to generate javascript code.
	 * @param protocol	request/response protocol,its value defined by constants PROTOCOL_SOAP,
	 * PROTOCOL_HTTPPOST,PROTOCOL_HTTPGET.
	 */
	public JSGenerator(OutputStream out,WSDL wsdl,String protocol){
		this.out = out;
		this.wsdl = wsdl;
		this.protocol = protocol;
		try {
			this.ops = wsdl.getOperations();
		} catch (XPathExpressionException e) {
			
			e.printStackTrace();
		}
		
	}
	
	
	/**
	 * 
	 * 
	 * @param out	destination of generate javascript code.
	 * @param wsdl	wsdl object contains information used to generate javascript code.
	 * @param protocol	request/response protocol,its value defined by constants PROTOCOL_SOAP,
	 * PROTOCOL_HTTPPOST,PROTOCOL_HTTPGET.
	 * @param asynch	true- asynchronous invoking in js, false- synchronous invoking in js.
	 */
	public JSGenerator(OutputStream out,WSDL wsdl,String protocol,boolean asynch){
		this.out = out;
		this.wsdl = wsdl;
		this.protocol = protocol;
		this.asynch = asynch;
		try {
			this.ops = wsdl.getOperations();
		} catch (XPathExpressionException e) {
			
			e.printStackTrace();
		}
		
	}

	
	
	
	
	public void writeCode() throws IOException{
		ICodeGenerator generator = null ;
		if (PROTOCOL_SOAP.equalsIgnoreCase(protocol)){
			generator= new SoapGenerator(wsdl,asynch);	
		}else if (PROTOCOL_HTTPPOST.equalsIgnoreCase(protocol)){
			generator= new HttpPostGenerator(wsdl,asynch);
		}else if (PROTOCOL_HTTPGET.equalsIgnoreCase(protocol)){
			generator= new HttpGetGenerator(wsdl,asynch);
		}
		writeComment();
		writeHttpRequest();
		writeClassDefinition();
		codes.append(generator.writeCode());
		writeEnd();
		out.write(codes.toString().getBytes());
		
	}
	
	protected void writeComment(){
		
		codes.append(newLine
				+ "//------------------------------------------------------------------------------"+ newLine
				+ "// <autogenerated>"+ newLine
				+ "//     This code was generated by wsdl2js tool."+ newLine
				+ "//     Runtime Version: 0.1"	+ newLine
				+ "//"	+ newLine
				+ "//     Changes to this file may cause incorrect behavior and will be lost if"+ newLine
				+ "//     the code is regenerated."	+ newLine
				+ "// </autogenerated>"	+ newLine
				+ "//------------------------------------------------------------------------------"+ newLine
				);
	}
	
	
	
	protected void writeHttpRequest(){
		
		codes.append("\t//remote web server request object" + newLine
			+ "\tvar xmlHttpRequest;" + newLine
			+ "\tfunction getHttpRequest(){" + newLine
			+ "\t\tvar http_request;" + newLine
			+ "\t\tif (window.XMLHttpRequest) { // Mozilla, Safari, ..." + newLine
   			+ "\t\t\t http_request = new XMLHttpRequest();" + newLine
			+ "\t\t}else if (window.ActiveXObject) { // IE" + newLine
 			+ "\t\t\t http_request = new ActiveXObject(\"Microsoft.XMLHTTP\");" + newLine	  
			+ "\t\t }else{" + newLine
			+ "\t\t\t alert(\"Your browser doesn't support to create XMLHttp Object,Some content on this page can't show.\");" + newLine
			+ "\t\t\t return null;"+newLine
			+ "\t\t}" + newLine
			+ "\t\t return http_request;" + newLine
			+ "\t}" + newLine + newLine
			);
		
		
	}
	
	
	protected void writeClassDefinition(){
		try {
			codes.append("\t// define a class to encapsulate invoking of web service" + newLine);
			codes.append("\t// the class name is the name of web service" + newLine);
			codes.append("\t// url -  location of access web service." + newLine);
			codes.append("\tfunction " + wsdl.getServiceName()+"(url){" + newLine +
					"\t\t// url=" + wsdl.getLocation()+ newLine +
					"\t\tthis.url = url" + newLine);
		} catch (XPathExpressionException e) {
			
			e.printStackTrace();
		}
		
		try {
			for(Operation opt:wsdl.getOperations()){
				codes.append("\t\tthis."+opt.name + "=" + opt.name+newLine);
			}
		} catch (XPathExpressionException e) {
			e.printStackTrace();
		}
		
		codes.append("\t}"+newLine);
		
	}
	
	
	
	protected void writeEnd(){
		codes.append(newLine + newLine);
	}
	
	
	
}
